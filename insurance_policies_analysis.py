# -*- coding: utf-8 -*-
"""insurance_policies_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1w8j0AIx5NhgOdZCZCIPp3kgQ6MT89Mc2

## **Insurance Policy Analysis Project**

#### **Background:**
This insurance policy analysis project aims to explore and analyze data related to insurance policies. Insurance is an industry that is critical in protecting individuals and companies from unforeseen financial risks. In this project, we will extract information from an insurance policies dataset that includes variables such as ID, date of birth, marital status, car usage, gender, number of children driving, education, car make, car model, car color, car year, frequency of claims, zone of coverage, number of claims, and household income.

The dataset used is a collection of insurance policies data which contains information related to insurance policies. This dataset includes various variables that reflect customer profiles and information related to insurance claims. This dataset is arranged in a structured format and ready for analysis.

#### **Purpose of Analysis:**
The main objective of this analysis is to gain insight and deeper understanding of insurance policies, including claim patterns, customer characteristics, and factors that influence insurance claims. This analysis will include the use of descriptive statistical analysis methods, data visualization, and possibly also the application of predictive models. Several research questions that will be answered through this analysis include:

1. What is the average age of the customer (provide mean and median)? Does age number affect the number of claims filed?
2. Is there a relationship between car use, gender, and the number of children driving and the frequency of insurance claims?
3. How is the distribution of the number of claims and the average number of claims by coverage zone? and so on.

By analyzing this dataset, it is hoped that we can gain valuable insights that can support insurance decision-making and assist in the development of strategies that are more effective in managing risk.
"""

# Import required modules
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# set adjustment for any visualization
sns.set_style('white')

# Load data
data = pd.read_csv('Insurance Policies.csv')
data

# Checking if data has duplicate or NaN values
duplicate_rows = data[data.duplicated()]
if duplicate_rows.empty:
  print('No duplicate data')
else:
  print('Duplicate data found:')
  print(duplicate_rows)

missing_data = data.isnull().sum()
if missing_data.sum() == 0:
  print('No NaN or missing data')
else:
  print('NaN or missing data found:')
  print(missing_data)

data = data.dropna().copy()

data.info()

# Reformat some data type format from these following columns
data['birthdate'] = pd.to_datetime(data['birthdate'], dayfirst=True)
data['car_year'] = data['car_year'].astype(str)
data['claim_amt'] = data['claim_amt'].str.replace('$', '').astype(float)
data['household_income'] = data['household_income'].str.replace('$', '').astype(float)

print(data.dtypes)

# Change some column names for easier understanding
new_columns = {'ID': 'numberID',
               'car_make': 'brand',
               'car_model': 'model',
               'car_color': 'color',
               'car_year': 'produce_year'}
data = data.rename(columns=new_columns)

# Checking unique values from these following variables
print(data['marital_status'].unique())
print(data['car_use'].unique())
print(data['education'].unique())
print(data['coverage_zone'].unique())

# Group several unique values above into new category, then put them into data
marital_dict = {
    'Single': 'Individual',
    'Married': 'Pair',
    'Divorced': 'Individual',
    'Seperated': 'Individual'
}

edu_dict = {
    'High School': 'Basic Education',
    'Bachelors': 'Advanced Education',
    'Masters': 'Advanced Education',
    'PhD': 'Advanced Education'
}

cover_zone_dict = {
    'Highly Urban': 'Urban',
    'Urban': 'Urban',
    'Rural': 'Rural',
    'Highly Rural': 'Rural',
    'Suburban': 'Suburban'
}

data['marital_status_new'] = data['marital_status'].apply(lambda x: marital_dict[x])
data['education_level'] = data['education'].apply(lambda x: edu_dict[x])
data['covered_area'] = data['coverage_zone'].apply(lambda x: cover_zone_dict[x])
data

# Eliminate columnns that are no longer in use
data_clean = data.drop(['marital_status', 'education', 'coverage_zone'], axis=1)

# Checking statistical view in our data
print(data_clean.describe())
print(data_clean.head())

"""### **Analyze Process**

1. **What is the average age of the customer (provide mean and median)? Does age number affect the number of claims filed? If so, show the correlation!**
"""

# First wee need to grouping age number from each customer
polis = data_clean.copy()

polis['age'] = (pd.to_datetime('now') - polis['birthdate']).astype('<m8[Y]')
def group_age(age):
    if age < 30:
        return '20 - 30'
    elif age < 40:
        return '30 - 40'
    elif age < 50:
        return '40 - 50'
    elif age < 60:
        return '50 - 60'
    elif age < 70:
        return '60 - 70'
    elif age < 80:
        return '70 - 80'
    return '80+'

polis['group_age'] = polis['age'].apply(group_age)
# Finding out the average customer age, median and also calculate
# the correlation between age and claim ammount

# Define variables
title = 'Customer Age Distribution'
color = ['#E8E8E8',
          '#E8E8E8', 
          '#E8E8E8', 
          '#E8E8E8', 
          '#D75341', 
          '#E8E8E8', 
          '#E8E8E8']

# Define the desired order of age ranges
age_ranges = ['20 - 30', '30 - 40', '40 - 50', '50 - 60', '60 - 70', '70 - 80', '80+']

# Convert 'group_age' to categorical data type with the desired order
polis['group_age'] = pd.Categorical(polis['group_age'], categories=age_ranges, ordered=True)

# Define plot
fig, ax = plt.subplots(figsize=(8, 6))
sns.countplot(data=polis,
              x='group_age',
              palette=color)
fig.suptitle(title,
            x=0.1,
            y=1.1,
            horizontalalignment='left',
            verticalalignment='top',
            fontsize=15)
sns.despine(left=True)
print()
age_mean = polis['age'].mean()
age_median = polis['age'].median()

# Idnetify correlation value
correlation = polis[['age', 'claim_amt']].corr().iloc[0, 1]
print("Correlation between customer age and claim ammount:")
print(correlation)
print(f'Age mean: {age_mean}')
print(f'Age median: {age_median}')

"""There is no strong correlation between the customer's age (by date of birth) and the number of claims filed. With 0.002269534913832814 indicates the weak relationship and there is no significant correlatio between these two variables. In addition, the mean and median ages give an idea of the age distribution of the customers in your dataset.

2. **What is the relationship between car ownership (personal/commercial) and the number of claims filed?**
"""

# To answer this question we are going to use chi-square test method
# Load module
from scipy.stats import chi2_contingency

# Define independent and dependent variables
car_ownership = polis['car_use']
claim = polis['claim_amt']

# Using the chi-square test to test the relationship 
# between car ownership and the number of claims
pivot_table = pd.pivot_table(polis,
                             values='claim_amt',
                             index=car_ownership,
                             aggfunc='count')

chi2_stat, p_value, dof, expected = chi2_contingency(pivot_table)
print("\nChi-square test result:")
print("Chi-Square Statistic:", chi2_stat)
print("P-Value:", p_value)
print("Degrees of freedom:", dof)
print("Expected Frequencies:", expected)

# Plot to better understanding of distribution
fig, ax = plt.subplots(figsize=(8, 6))
sns.violinplot(data=polis, x='car_use', y='claim_amt', palette='Set3')
ax.set_xlabel('Car Ownership')
ax.set_ylabel('Number of Claim')
ax.set_title('Distribution Relationship Between Car Ownership and Number of Claim')
sns.despine(left=True)
plt.show()

"""Based on the results of the chi-square test that we run, the following information is obtained:

1. Chi-Square Statistics: The resulting chi-square value is 0.0. This shows that there is no significant difference between car ownership (personal/commercial) and the number of claims filed.

2. P-Value: The p-value obtained is 1.0. The P-value is a measure of statistical significance. In this case, a high p-value indicates that there is insufficient evidence to reject the null hypothesis. In other words, there is no significant relationship between car ownership and the number of claims filed.

3. Degrees of Freedom: In this case, the degrees of freedom are 0. This indicates that there are no interrelated columns or rows in the contingency table.

4. Expected Frequencies: The expected frequencies matrix shows the expected frequencies if there is no relationship between car ownership and the number of claims. In this case, the value is 7482 for private car ownership and 30060 for commercial car ownership.

Thus, the results of the chi-square test show that there is no significant relationship between car ownership (personal/commercial) and the number of claims filed. This means that car ownership (personal/commercial) does not seem to affect the number of claims reported


3. **How is the distribution of brand car makes and models in the dataset?Is there a significant relationship with the number of claims, for example the effect of causing a high number of claims**
"""

# To answer question above we tend use the descriptive analysis
# Create and display frequency table for brand distribution
merk_count = polis['brand'].value_counts()
print('Frequency Table Brand:')
print(merk_count)

# Create and display frequency table for model distribution
model_count = polis['model'].value_counts()
print('Frequency Table Model:')
print(model_count)

# Menghitung jumlah klaim berdasarkan merek mobil
claim_by_brand = polis.groupby('brand')['claim_amt'].sum().sort_values(ascending=False)

# Menampilkan tabel jumlah klaim berdasarkan merek mobil
print("Tabel Jumlah Klaim berdasarkan Merek Mobil:")
print(claim_by_brand)

# Membuat visualisasi diagram batang untuk jumlah klaim berdasarkan merek mobil
fig, ax = plt.subplots(figsize=(10, 6))
sns.barplot(x=claim_by_brand.values,
            y=claim_by_brand.index,
            ax=ax,
            color='blue')
ax.set_xlabel('Merek Mobil', fontsize=12)
ax.set_ylabel('Jumlah Klaim', fontsize=12)
ax.set_title('Jumlah Klaim berdasarkan Merek Mobil', fontsize=14)
#plt.xticks(rotation=45)
plt.show()

# Melakukan uji hipotesis (misalnya, uji ANOVA) untuk menentukan apakah ada perbedaan yang signifikan dalam jumlah klaim antara merek mobil
# Misalnya, menggunakan uji ANOVA dari library scipy.stats
import scipy.stats as stats

brand_groups = []
for brand in polis['brand'].unique():
    brand_groups.append(polis.loc[polis['brand'] == brand, 'claim_amt'])

f_stat, p_value = stats.f_oneway(*brand_groups)

print("\nHasil Uji ANOVA:")
print("F-Statistic:", f_stat)
print("P-Value:", p_value)

"""The insight that can be drawn from these results is that based on the statistical analysis performed, no significant relationship was found between the factors tested (eg factors that can cause the number of claims to increase) and the number of claims submitted.


4. **Is there a difference in the number of claims between families with one child and families with more than one child driving a car?**
"""

# To answer this question
# Separate data into two group of family
one_kid = polis[polis['kids_driving'] == 1]['claim_amt']
more_one_kid = polis[polis['kids_driving'] > 1]['claim_amt']

# Conduct t-test
t_statistic, p_value = stats.ttest_ind(one_kid, more_one_kid)

# Display result
print('Independent t-test result:')
print('T-Statistic:', t_statistic)
print('P-Value:', p_value)

"""A negative score on the T-Statistics indicates that the "One Child" group tends to have a lower claim average than the "More Than One Child" group. However, the p-value obtained is 0.1974 indicating the probability that the differences observed in the sample may occur randomly. A high P-value (above the assigned level of significance) indicates that the difference in mean claims between the “One Child” and “More Than One Child” groups is not statistically significant.

There is insufficient evidence to conclude that there is a significant difference in the number of claims between families with one child and families with more than one child.


5. **What is the relationship between marital status and household income? Is there a correlation between these 2 variables? and is there a significant relationship from each of these variables to the number of claims?**

"""

# To check which group that has highest income in terms of marriage status
# Convert data type first
polis['household_income'] = pd.to_numeric(polis['household_income'], errors='coerce')

# Calculates average income by marital status group
average_income_by_marital_status = polis.groupby('marital_status_new')['household_income'].mean().reset_index()

# Determine the group with the highest income
highest_group = average_income_by_marital_status.loc[average_income_by_marital_status['household_income'].idxmax()]

# Display result
print("Average Income Based on Marriage Category:")
print(average_income_by_marital_status)
print("\nCategory with the highest income:")
print("Category:", highest_group)

# Display into bar chart
plt.figure(figsize=(10, 6))
sns.barplot(data=average_income_by_marital_status,
            x='marital_status_new',
            y='household_income')
plt.xlabel('Marital Status')
plt.ylabel('Average Income')
plt.title('Average Income by Marital Status')
sns.despine(left=True)
plt.show()

# Finding the correlation
marital_income = polis.drop(['numberID', 'birthdate',
                             'car_use', 'gender',
                             'kids_driving', 'parent',
                             'brand', 'model',
                             'color', 'produce_year',
                             'claim_freq', 'education_level',
                             'covered_area', 'age', 'group_age'], axis=1)

marital_income['marital_status_new'] = marital_income['marital_status_new'].replace({'Individual': 0, 'Pair': 1})

# Identify correlation between marital_status and household_income using Pearson method
correlation = marital_income['marital_status_new'].corr(marital_income['household_income'])
print('Correlation between marital status and household income:', correlation)

# Now let's see the relationship using regression linear model
import statsmodels.api as sm

# adding constant column
marital_income['intercept'] = 1

# Create model 
model = sm.OLS(marital_income['claim_amt'], marital_income[['intercept', 'marital_status_new', 'household_income']])
result = model.fit()

# Mencetak hasil ringkasan model
print(result.summary())

"""For the highest marital status group, on average, it is in the Pair (married, together) group with a value of 147315.860216. Then also obtained a correlation value that is very close to the number 0, between these 2 variables where the value is 0.0008211329925418917 where there is no significant correlation between these 2 variables. In other words, marital status is not a major factor in determining the level of household income.

6. **Does the level of income (low/middle/high-income) affect the high number of claims reported by each customer?**
"""

# To answer this question, we can use ANOVA (Analysis of Variance) 
# to compare averages between these two variables
import statsmodels.api as sm
from statsmodels.formula.api import ols

#income_percentiles = polis['household_income'].quantile([0.25, 0.75])

# Create income segments based on percentile range
#low_income = polis['household_income'] <= income_percentiles[0.25]
#middle_income = (polis['household_income'] > income_percentiles[0.25]) & (polis['household_income'] <= income_percentiles[0.75])
#high_income = polis['household_income'] <= income_percentiles[0.75]

#income_category = pd.concat([polis[low_income]['household_income'],
#                             polis[middle_income]['household_income'],
#                             polis[high_income]['household_income']])
# Mengubah tipe data kolom 'pemasukan rumah tangga' menjadi kategori (low/middle/high)
polis['income_category'] = pd.qcut(polis['household_income'],
                                   q=3,
                                   labels=['low', 'middle', 'high'])

# Membuat model ANOVA
model = ols('claim_amt ~ income_category',
            data=polis).fit()
anova_table = sm.stats.anova_lm(model, typ=2)

# Menampilkan hasil ANOVA
print(anova_table)

# Membuat boxplot
plt.figure(figsize=(8, 6))
sns.boxplot(data=polis,
            x='income_category',
            y='claim_amt')
plt.xlabel('Income Category')
plt.ylabel('Claim Amount')
plt.title('Distribution of Claim Amount by Income Category')
plt.show()

"""1. The p-value (0.66556) obtained is greater than the commonly used significance level (eg 0.05). This shows that there is no significant difference in the average number of claims between income groups (low, middle, high). In this context, there is not enough statistical evidence to support the effect of income levels on the high number of claims reported by customers.

2. The obtained F-statistic value (0.407131) is also not significant, which indicates that the variation in the average number of claims that can be explained by the income_category factor is low.

Based on the results of this ANOVA analysis, there is not enough evidence to state that income levels (low/middle/high-income) affect the high number of claims reported by customers in the dataset.


7. **Is there a relationship or correlation between education level and the number of claims reported? what is the distribution shown between the two variables?**
"""

edu_claim = polis.drop(['numberID', 'birthdate',
                             'car_use', 'gender',
                             'kids_driving', 'parent',
                             'brand', 'model',
                             'color', 'produce_year',
                             'claim_freq', 'marital_status_new', 'household_income',
                             'covered_area', 'age', 'group_age'], axis=1)

edu_claim['education_level'] = edu_claim['education_level'].replace({'Basic Education': 0, 'Advanced Education': 1})

# Let's try using Non-Linear Regression Modeling
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures

# Memilih variabel pendidikan dan jumlah klaim
X = edu_claim['education_level'].values.reshape(-1, 1)
y = edu_claim['claim_amt'].values

# apply polinomial regression
degree = 2  # polinomial degree
poly_features = PolynomialFeatures(degree=degree)
X_poly = poly_features.fit_transform(X)

# Melatih model regresi
model = LinearRegression()
model.fit(X_poly, y)

# Membuat prediksi berdasarkan model
X_range = np.linspace(X.min(), X.max(), 100).reshape(-1, 1)
X_range_poly = poly_features.transform(X_range)
y_pred = model.predict(X_range_poly)

# Visualisasi hubungan non-linear
plt.figure(figsize=(8, 6))
plt.scatter(X, y, label='Data')
plt.plot(X_range, y_pred, color='red', label='Regression Curve')
plt.xlabel('Education Level')
plt.ylabel('Claim Amount')
plt.title('Non-linear Relationship between Education and Claim Amount')
plt.legend()
plt.show()

"""1. The curved curve shows that the relationship between education level and the number of claims cannot be explained linearly. This means that changes in education levels do not have a direct and proportional impact on the number of claims. For example, an increase in education level does not necessarily mean that the number of claims will increase or decrease consistently. The curve tends to decrease, so this shows a tendency to decrease in the number of claims along with an increase in the level of education.

2. we can identify patterns or trends that might not be apparent through correlation analysis or simple linear regression. This information can provide additional insight that is useful in understanding the factors that affect claim amounts and how these effects change with education level.


8. **Does area coverage affect the level of claims reported by customers? if yes, show the distribution of the relationship that occurs between the 2 variables?**
"""

# Membuat boxplot untuk melihat distribusi jumlah klaim berdasarkan cakupan wilayah
plt.figure(figsize=(10, 6))
sns.boxplot(data=polis, x='covered_area', y='claim_amt')
plt.xlabel('Cakupan Wilayah')
plt.ylabel('Jumlah Klaim')
plt.title('Distribusi Jumlah Klaim berdasarkan Cakupan Wilayah')
plt.show()

model = ols('claim_amt ~ covered_area', data=polis).fit()
anova_table = sm.stats.anova_lm(model, typ=2)

print(anova_table)

area = polis.drop(['numberID', 'birthdate',
                             'car_use', 'gender',
                             'kids_driving', 'parent',
                             'brand', 'model',
                             'color', 'produce_year',
                             'claim_freq', 'marital_status_new', 'household_income',
                             'education_level', 'age', 'group_age'], axis=1)

area['covered_area'] = area['covered_area'].replace({'Urban': 0, 'Suburban': 1, 'Rural': 2})

# Mengambil data cakupan wilayah dan tingkat klaim
x = area['covered_area'].values.reshape(-1, 1)
y = area['claim_amt'].values

# Membangun model regresi polinomial
poly_features = PolynomialFeatures(degree=2)  # Sesuaikan derajat polinomial jika diperlukan
x_poly = poly_features.fit_transform(x)

model = LinearRegression()
model.fit(x_poly, y)

# Memprediksi tingkat klaim dengan menggunakan model regresi polinomial
y_pred = model.predict(x_poly)

# Visualisasi hasil regresi polinomial
plt.scatter(x, y, color='blue', label='Data')
plt.plot(x, y_pred, color='red', label='Polynomial Regression')
plt.xlabel('Coverage Area')
plt.ylabel('Claim Amount')
plt.title('Polynomial Regression')
plt.legend()
plt.show()

"""After performing several analytical methods, it was found that the coverage area has no significant relationship to the number of claims reported by customers."""